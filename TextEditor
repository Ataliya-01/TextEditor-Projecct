import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;

public class TextEditor implements ActionListener {


    JFrame frame;

    JMenuBar menuBar;

    JMenu file, edit;

    //File menu items
    JMenuItem newFile, openFile, saveFile;

    //Edit menu items
    JMenuItem cut, copy, paste, selectAll, close;

    JTextArea textArea;

    TextEditor() {

        //Initialize a frame
        frame = new JFrame();

        //Initialize menubar
        menuBar = new JMenuBar();

        //Initialize textArea

        textArea = new JTextArea();

        //Initialize menus
        file = new JMenu("File");
        edit = new JMenu("Edit");

        //Initialize file menu Items
        newFile = new JMenuItem("New Window");
        openFile = new JMenuItem("Open File");
        saveFile = new JMenuItem("Save File");

        //Add action Listener to file menu items
        newFile.addActionListener(this);
        openFile.addActionListener(this);
        saveFile.addActionListener(this);

        //Add menu items to file menu
        file.add(newFile);
        file.add(openFile);
        file.add(saveFile);

        //Initialize edit menu items
        cut = new JMenuItem("Cut");
        copy = new JMenuItem("Copy");
        paste = new JMenuItem("Paste");
        selectAll = new JMenuItem("Select All");
        close = new JMenuItem("Close");

        //Add actionListener to edit menu items
        cut.addActionListener(this);
        copy.addActionListener(this);
        paste.addActionListener(this);
        selectAll.addActionListener(this);
        close.addActionListener(this);


        //Adding to edit menu
        edit.add(cut);
        edit.add(copy);
        edit.add(paste);
        edit.add(selectAll);
        edit.add(close);


        //Add menus to menubar
        menuBar.add(file);
        menuBar.add(edit);

        //set Menubar to frame
        frame.setJMenuBar(menuBar);

       //Create content pane
        JPanel panel = new JPanel();
       panel.setBorder(new EmptyBorder(5, 5, 5, 5));
       panel.setLayout(new BorderLayout(0, 0));

        //Add text area to panel
        panel.add(textArea, BorderLayout.CENTER);
        //Create Scroll pane
        JScrollPane scrollPane = new JScrollPane(textArea, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        //Add scroll pane to panel
        panel.add(scrollPane);
        //Add panel to frame
        frame.add(panel);


        //Set Dimensions of frame
        frame.setBounds(100, 100, 400, 400);
        frame.setTitle("Text Editor");
        frame.setVisible(true);
        frame.setLayout(null);
    }

    @Override
    public void actionPerformed(ActionEvent actionEvent) {
        if (actionEvent.getSource() == cut) {
            //Performed cut Operation
            textArea.cut();
        }
        if (actionEvent.getSource() == copy) {
            //Performed copy Operation
            textArea.copy();
        }
        if (actionEvent.getSource() == paste) {
            //Performed paste Operation
            textArea.paste();
        }
        if (actionEvent.getSource() == selectAll) {
            //Performed selectAll Operation
            textArea.selectAll();
        }
        if (actionEvent.getSource() == close) {
            //Performed close Operation
            System.exit(0);
        }
        if (actionEvent.getSource() == openFile) {
            JFileChooser fileChooser = new JFileChooser("C");
            int chooseOption = fileChooser.showOpenDialog(null);
            //if we have clicked on open button
            if (chooseOption == JFileChooser.APPROVE_OPTION) {
                //Getting selected file
                File file = fileChooser.getSelectedFile();
                //Get the path of selected file
                String filePath = file.getPath();
                try {
                    //Initialize filereader
                    FileReader fileReader = new FileReader(filePath);
                    BufferedReader bufferedReader = new BufferedReader(fileReader);
                    String intermediate = "", output = "";
                    //Read contents of file line by line
                    while ((intermediate = bufferedReader.readLine()) != null) {
                        output += intermediate + "\n";
                    }
                    //set the output string to textarea
                    textArea.setText(output);
                } catch (IOException fileNotFoundException) {
                    fileNotFoundException.printStackTrace();
                }
            }
        }
        if (actionEvent.getSource() == saveFile) {
            //Initialize file picker
            JFileChooser fileChooser = new JFileChooser("C:");
            //Get choose option from file chooser
            int chooseOption = fileChooser.showSaveDialog(null);
                //check if we clicked on save button
                if (chooseOption == JFileChooser.APPROVE_OPTION) {
                    //Create a new file with chosen directory path and file name
                    File file = new File(fileChooser.getSelectedFile().getAbsolutePath() + ".txt");


                        //Initialize fiile wrriter
                        try {
                            FileWriter fileWriter = new FileWriter(file);
                            //Initialize Buffered writer
                            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                            //Write contents of txt area to file
                            textArea.write(bufferedWriter);
                            bufferedWriter.close();
                        } catch (IOException ioException) {
                            ioException.printStackTrace();
                        }
                    }
                }
                if (actionEvent.getSource() == newFile) {
                    TextEditor newTextEditor = new TextEditor();
                }

            }

    public static void main(String[] args){

        TextEditor textEditor = new TextEditor();
        }
    }
